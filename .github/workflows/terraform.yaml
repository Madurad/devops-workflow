name: Terraform workflow
on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
  workflow_dispatch:
    inputs:
      environment:
        description: 'terraform action'
        required: true
        default: 'staging'
        type: choice
        options:
          - plan
          - apply
      gcp_project: 
        description: 'GCP Project ID'
        required: true
        default: 'playground-s-11-95270d6c'
env:
  TF_IN_AUTOMATION: 'true'
  GOOGLE_PROJECT: ${{ github.event.inputs.gcp_project }}
  TF_TOKEN: ${{ secrets.TF_TOKEN }}
    
jobs:
  terraform:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        
      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
    
      - name: Get project value
        run: gcloud config get-value project

      - name: Create terraform backend bucket if not exists
        run: |
            if ! gcloud storage buckets describe gs://madura-state-bucket --project=playground-s-11-95270d6c 2>/dev/null; then
                gcloud storage buckets create gs://madura-state-bucket --location=us-central1 --project=playground-s-11-95270d6c
            fi

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.0.0
        #   cli_config_credentials_token: ${{ secrets.TF_TOKEN }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        if: ${{ github.event.inputs.environment == 'plan' }}
        run: terraform plan -var="gcp_project_id=${{ github.event.inputs.gcp_project }}" -out=tfplan

      - name: Terraform Apply
        if: ${{ github.event.inputs.environment == 'apply' }}
        run: terraform apply -var="gcp_project_id=${{ github.event.inputs.gcp_project }}" -auto-approve
